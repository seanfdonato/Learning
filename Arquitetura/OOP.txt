Coupling - direct dependece between objects. When one changes the other changes too. 

Cohesion - Each object have they own responsability without need other object;

Class - digital representaion about somethink in real world;

Objects - instances of classes

State == Class attribute

Behavior == Class methods

############################# OOP Pillar ############################################

Inheritance - It's when a class enherit behavior and states for another class. This class usually is called super class

Abstration - it's when you a have a class with generecs behavior and states for other class. Abstration is attach with the conception of inherit.

Polymorphism - Allow that behavior of more abstracts classes have diferent behavior in concret classes that have his reference;
				Ex. When have a derived class that extends a method from a super class and implements diferent behavior

Encapsulation - Uses access modifiers to control access to class's behavior

Interface - its a contract with a class. When is defined methods (without implementation) that have to be implemented in classes that extends it.
			The interface can be extended in moe that one class. A good practice is inteject the interface as dependecy for classes that extends interfaces.
			Doing this when the class change you dont need to change they instance


################################# Access Modifiers

Private - Is default. Accessible only in own escope.

Protected - For derivade classes;

Internal -  Just for the assembly

Protected Internal (only for methods) Inherit or the assembly

Protected Private (somente metodos) Enherit and his own escope


################################# Behavior Modifiers

sealed - The class can not be inhereted ;

abstract - The class can not be Instanced






